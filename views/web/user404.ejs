<!DOCTYPE html>
<html>
  <head>
    <title>404 - Page Not Found!</title>
    <%- include('partials/head'); -%>

    <style>
      #canvas {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    </style>
  </head>
  <body class="d-flex flex-column min-vh-100">
    <%- include('partials/loader'); -%>
    <%- include('partials/navbar', {style: "background-color: transparent;"}) -%>


    <div class="container d-flex flex-column justify-content-center align-items-center" style="height: 70vh;">
      <div class="d-flex justify-content-center align-items-center">
        <h1><a style="color: #c2413a">404</a> User Not Found</h1>
      </div>
      <div class="text-right mt-3">
        <p>This user may have been removed or was never there!</p>
      </div>
      
    </div>

    <canvas id="canvas" width="200" height="200"></canvas>

    <script>
      const canvas = document.getElementById('canvas');
      const ctx = canvas.getContext('2d');
      
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
      
      let particlesArray;

      //create particle
      function Particle(x,y,directionX,directionY,size,color){
        this.x = x;
        this.y = y;
        this.directionX = directionX;
        this.directionY = directionY;
        this.size = size;
        this.color = color;
      }

      //add draw method to particle prototype
      Particle.prototype.draw = function(){
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, false);
        ctx.fillStyle = this.color;
        ctx.fill();
      }

      //add update method to particle prototype
      Particle.prototype.update = function(){
        if(this.x + this.size > canvas.width || this.x - this.size < 0){
          this.directionX = -this.directionX;
        }
        if(this.y + this.size > canvas.height || this.y - this.size < 0){
          this.directionY = -this.directionY;
        }
        this.x += this.directionX;
        this.y += this.directionY;
        this.draw();
      }

      //create particle array
      function init(){
        particlesArray = [];
        let numberOfParticles = (canvas.height * canvas.width) / 9000;
        for(let i = 0; i < numberOfParticles; i++){
          let size = (Math.random() * 5) + 1;
          let x = (Math.random() * ((innerWidth - size * 2) - (size * 2)) + size * 2);
          let y = (Math.random() * ((innerHeight - size * 2) - (size * 2)) + size * 2);
          let directionX = (Math.random() * 5) - 2.5;
          let directionY = (Math.random() * 5) - 2.5;
          let color = '#8c8c8c';
          
          particlesArray.push(new Particle(x,y,directionX,directionY,size,color));
        }
      }

      //animation loop
      //animation loop
      function animate(){
        requestAnimationFrame(animate);
        ctx.clearRect(0,0,innerWidth,innerHeight);

        for(let i = 0; i < particlesArray.length; i++){
          particlesArray[i].update();
        }
      }
      window.addEventListener('resize', function(){
        canvas.width = innerWidth;
        canvas.height = innerHeight;
        init();
      })

      //scroll event
      window.addEventListener('scroll', function(){
        if(window.scrollY > canvas.height){
          canvas.style.display = 'none';
        } else {
          canvas.style.display = 'block';
        }
      })

      init();
      animate();
      
    
    </script>
  </scripts>
      <%- include('partials/footer'); -%>
      </body>
</html>
